#include "LEDShim.h"

////////////////////////////////////////////////////////////////////////////////////////////////////
// CONSTRUCTORS/DESTRUCTOR
////////////////////////////////////////////////////////////////////////////////////////////////////
LEDShim::LEDShim(uint8_t brightness)
: _ledDriver(NUM_LEDS, 3)
, _brightness(brightness)
{
}



////////////////////////////////////////////////////////////////////////////////////////////////////
// METHODS
////////////////////////////////////////////////////////////////////////////////////////////////////
void LEDShim::Begin()
{
  _ledDriver.begin(I2C_ADDRESS);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
CRGB(&LEDShim::Pixels())[NUM_LEDS]
{
  return _pixels;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
void LEDShim::SetBrightness(uint8_t brightness)
{
  _brightness = brightness;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
void LEDShim::Show()
{
  for(uint32_t i = 0; i < NUM_LEDS; i++)
  {
    _ledDriver.setLEDPWM(i * 3, ((uint16_t)_pixels[i].r * _brightness) / 255);
    _ledDriver.setLEDPWM((i * 3) + 1, ((uint16_t)_pixels[i].g * _brightness) / 255);
    _ledDriver.setLEDPWM((i * 3) + 2, ((uint16_t)_pixels[i].b * _brightness) / 255);
  }
}
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
